(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{540:function(e,a,t){"use strict";t.r(a);var s=t(7),n=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("本文基于 CentOS 7 下安装配置 Nginx 操作实践记录整理。")]),e._v(" "),t("h2",{attrs:{id:"一、配置-epel-源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、配置-epel-源"}},[e._v("#")]),e._v(" 一、配置 EPEL 源")]),e._v(" "),t("p",[e._v("CentOS 7 64 位安装 EPEL")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[root@localhost ~]# wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n[root@localhost ~]# rpm -ivh epel-release-latest-7.noarch.rpm\n[root@localhost ~]# yum repolist ##检查是否已添加至源列表\n")])])]),t("p",[e._v("CentOS 6 64 位安装 EPEL")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[root@localhost ~]# wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\n[root@localhost ~]# rpm -ivh epel-release-6-8.noarch.rpm\n[root@localhost ~]# yum repolist ##检查是否已添加至源列表\n")])])]),t("p",[e._v("需要相应的兼容操作系统版本的 epel 包可以直接访问 http://dl.fedoraproject.org/pub/epel 查看，然后使用 wget 下载 RPM 安装出现的错误:")]),e._v(" "),t("p",[e._v("错误：解压压缩文件 在文件/usr/share/doc/epel-release-7/GPL;55d6d507 失败：cpio: read 失败 - 没有该文件名或目录")]),e._v(" "),t("p",[e._v("出现该错误是由于下载的源文件出现错误，重新下载一遍就好了")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo yum install -y epel-release\nsudo yum -y update\n")])])]),t("h2",{attrs:{id:"二、安装-nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、安装-nginx"}},[e._v("#")]),e._v(" 二、安装 Nginx")]),e._v(" "),t("p",[e._v("为了追加 nginx 的 yum 仓库，需要创建一个文件 /etc/yum.repos.d/nginx.repo，并将下面的内容复制进去：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[nginx]\nname=nginx repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=0\nenabled=1\n")])])]),t("p",[e._v(".编辑并保存/etc/yum.repos.d/nginx.repo 文件后，在命令行下执行")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo yum install -y nginx\n")])])]),t("p",[e._v("安装成功后，默认的网站目录为： /usr/share/nginx/html")]),e._v(" "),t("p",[e._v("默认的配置文件为：/etc/nginx/nginx.conf")]),e._v(" "),t("p",[e._v("自定义配置文件目录为: /etc/nginx/conf.d/")]),e._v(" "),t("h2",{attrs:{id:"三、开启端口-80-和-443"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、开启端口-80-和-443"}},[e._v("#")]),e._v(" 三、开启端口 80 和 443")]),e._v(" "),t("p",[e._v("如果你的服务器打开了防火墙，你需要运行下面的命令，打开 80 和 443 端口。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo firewall-cmd --permanent --zone=public --add-service=http\nsudo firewall-cmd --permanent --zone=public --add-service=https\nsudo firewall-cmd --reload\n")])])]),t("h2",{attrs:{id:"四、操作-nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、操作-nginx"}},[e._v("#")]),e._v(" 四、操作 Nginx")]),e._v(" "),t("ol",[t("li",[e._v("启动 Nginx")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("   systemctl start nginx\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("停止 Nginx")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("   systemctl stop nginx\n")])])]),t("ol",{attrs:{start:"3"}},[t("li",[e._v("重启 Nginx")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("   systemctl restart nginx\n")])])]),t("ol",{attrs:{start:"4"}},[t("li",[e._v("查看 Nginx 状态")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("   systemctl status nginx\n")])])]),t("ol",{attrs:{start:"5"}},[t("li",[e._v("启用开机启动 Nginx")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("   systemctl enable nginx\n")])])]),t("ol",{attrs:{start:"6"}},[t("li",[e._v("禁用开机启动 Nginx")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("   systemctl disable nginx\n")])])]),t("h2",{attrs:{id:"nginx-的配置文件和最佳实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-的配置文件和最佳实践"}},[e._v("#")]),e._v(" Nginx 的配置文件和最佳实践")]),e._v(" "),t("p",[e._v("通过以上方式安装的 Nginx，所有相关的配置文件都在 /etc/nginx/ 目录中。\nNginx 的主配置文件是 /etc/nginx/nginx.conf。\n为了使 Nginx 配置更易于维护，建议为每个服务（域名）创建一个单独的配置文件。\n每一个独立的 Nginx 服务配置文件都必须以 .conf 结尾，并存储在 /etc/nginx/conf.d 目录中。您可以根据需求，创建任意多个独立的配置文件。\n独立的配置文件，建议遵循以下命名约定，比如你的域名是 kaifazhinan.com，那么你的配置文件的应该是这样的 /etc/nginx/conf.d/kaifazhinan.com.conf，如果你在一个服务器中部署多个服务，当然你也可以在文件名中加上 Nginx 转发的端口号，比如 kaifazhinan.com.3000.conf，这样做看起来会更加友好。\n如果你的配置中有很多重复的代码，那么建议你创建一个 /etc/nginx/snippets 文件夹，在这里面存放所有会被复用的代码块，然后在各个需要用到的 Nginx 的配置文件中引用进去，这样可以更方便管理和修改。\nNginx 日志文件（access.log 和 error.log ）位于 /var/log/nginx/ 目录中。建议为每个独立的服务配置不同的访问权限和错误日志文件，这样查找错误时，会更加方便快捷。\n你可以将要部署的代码文件，存储在任何你想的位置，但是一般推荐存放在下列位置中的其中一个：")]),e._v(" "),t("p",[e._v("/home/<user_name>/<site_name>\n/var/www/<site_name>\n/var/www/html/<site_name>\n/opt/<site_name>\n/usr/share/nginx/html")])])}),[],!1,null,null,null);a.default=n.exports}}]);