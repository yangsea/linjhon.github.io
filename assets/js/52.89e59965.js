(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{555:function(a,t,s){"use strict";s.r(t);var e=s(7),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("本文基于 CentOS 7 下安装配置 Nginx 操作实践记录整理。")]),a._v(" "),s("h2",{attrs:{id:"方式一-使用-yum-安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式一-使用-yum-安装"}},[a._v("#")]),a._v(" 方式一：使用 yum 安装")]),a._v(" "),s("h3",{attrs:{id:"配置源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置源"}},[a._v("#")]),a._v(" 配置源")]),a._v(" "),s("h4",{attrs:{id:"配置-epel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-epel"}},[a._v("#")]),a._v(" 配置 EPEL")]),a._v(" "),s("p",[a._v("CentOS 7 64 位安装 EPEL")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" -ivh epel-release-latest-7.noarch.rpm\nyum repolist "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("##检查是否已添加至源列表")]),a._v("\n\n")])])]),s("p",[a._v("CentOS 6 64 位安装 EPEL")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" -ivh epel-release-6-8.noarch.rpm\nyum repolist "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("##检查是否已添加至源列表")]),a._v("\n")])])]),s("p",[a._v("需要相应的兼容操作系统版本的 epel 包可以直接访问 http://dl.fedoraproject.org/pub/epel 查看，然后使用 wget 下载 RPM 安装出现的错误:")]),a._v(" "),s("p",[a._v("错误：解压压缩文件 在文件/usr/share/doc/epel-release-7/GPL;55d6d507 失败：cpio: read 失败 - 没有该文件名或目录")]),a._v(" "),s("p",[a._v("出现该错误是由于下载的源文件出现错误，重新下载一遍就好了")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y epel-release\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum -y update\n")])])]),s("h4",{attrs:{id:"配置-nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-nginx"}},[a._v("#")]),a._v(" 配置 nginx")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\nyum info nginx\n")])])]),s("h3",{attrs:{id:"二、安装-nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、安装-nginx"}},[a._v("#")]),a._v(" 二、安装 Nginx")]),a._v(" "),s("p",[a._v("为了追加 nginx 的 yum 仓库，需要创建一个文件 /etc/yum.repos.d/nginx.repo，并将下面的内容复制进去：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[nginx]\nname=nginx repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=0\nenabled=1\n")])])]),s("p",[a._v(".编辑并保存/etc/yum.repos.d/nginx.repo 文件后，在命令行下执行")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y nginx\n")])])]),s("p",[a._v("安装成功后，默认的网站目录为： /usr/share/nginx/html")]),a._v(" "),s("p",[a._v("默认的配置文件为：/etc/nginx/nginx.conf")]),a._v(" "),s("p",[a._v("自定义配置文件目录为: /etc/nginx/conf.d/")]),a._v(" "),s("h3",{attrs:{id:"nginx-的配置文件和最佳实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-的配置文件和最佳实践"}},[a._v("#")]),a._v(" Nginx 的配置文件和最佳实践")]),a._v(" "),s("p",[a._v("通过以上方式安装的 Nginx，所有相关的配置文件都在 /etc/nginx/ 目录中。\nNginx 的主配置文件是 /etc/nginx/nginx.conf。\n为了使 Nginx 配置更易于维护，建议为每个服务（域名）创建一个单独的配置文件。\n每一个独立的 Nginx 服务配置文件都必须以 .conf 结尾，并存储在 /etc/nginx/conf.d 目录中。您可以根据需求，创建任意多个独立的配置文件。\n独立的配置文件，建议遵循以下命名约定，比如你的域名是 kaifazhinan.com，那么你的配置文件的应该是这样的 /etc/nginx/conf.d/kaifazhinan.com.conf，如果你在一个服务器中部署多个服务，当然你也可以在文件名中加上 Nginx 转发的端口号，比如 kaifazhinan.com.3000.conf，这样做看起来会更加友好。\n如果你的配置中有很多重复的代码，那么建议你创建一个 /etc/nginx/snippets 文件夹，在这里面存放所有会被复用的代码块，然后在各个需要用到的 Nginx 的配置文件中引用进去，这样可以更方便管理和修改。\nNginx 日志文件（access.log 和 error.log ）位于 /var/log/nginx/ 目录中。建议为每个独立的服务配置不同的访问权限和错误日志文件，这样查找错误时，会更加方便快捷。\n你可以将要部署的代码文件，存储在任何你想的位置，但是一般推荐存放在下列位置中的其中一个：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/home/<user_name>/<site_name>\n/var/www/<site_name>\n/var/www/html/<site_name>\n/opt/<site_name>\n/usr/share/nginx/html\n")])])]),s("h2",{attrs:{id:"方式二-手动下载安装包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式二-手动下载安装包"}},[a._v("#")]),a._v(" 方式二：手动下载安装包")]),a._v(" "),s("h3",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),s("ol",[s("li",[a._v("下载 nginx 包。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[root@localhost ~]# wget http://nginx.org/download/nginx-1.10.1.tar.gz\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("复制包到你的安装目录")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[root@localhost ~]# cp nginx-1.10.1.tar.gz /usr/local/\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("解压")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[root@localhost ~]# tar -zxvf nginx-1.10.1.tar.gz\n[root@localhost ~]# cd nginx-1.10.1\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[a._v("启动 nginx")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[root@localhost ~]# /usr/local/nginx/sbin/nginx\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[a._v("查看版本 s")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[root@localhost ~]# nginx -v\n")])])]),s("ol",{attrs:{start:"6"}},[s("li",[a._v("url 访问 nginx localhost 或 127.0.0.1")])]),a._v(" "),s("h3",{attrs:{id:"设置开机启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置开机启动"}},[a._v("#")]),a._v(" 设置开机启动")]),a._v(" "),s("p",[a._v("在系统服务目录里创建 nginx.service 文件")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("vim /lib/systemd/system/nginx.service\n")])])]),s("p",[a._v("写入内容如下：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[Unit]\nDescription=nginx\nAfter=network.target\n\n[Service]\nType=forking\nExecStart=/usr/local/nginx/sbin/nginx\nExecReload=/usr/local/nginx/sbin/nginx -s reload\nExecStop=/usr/local/nginx/sbin/nginx -s quit\nPrivateTmp=true\n\n[Install]\nWantedBy=multi-user.target\n")])])]),s("p",[a._v("Description:描述服务\nAfter:描述服务类别\n[Service]服务运行参数的设置\nType=forking 是后台运行的形式\nExecStart 为服务的具体运行命令\nExecReload 为重启命令\nExecStop 为停止命令\nPrivateTmp=True 表示给服务分配独立的临时空间\n注意：[Service]的启动、重启、停止命令全部要求使用绝对路径\n[Install]运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为 3")]),a._v(" "),s("p",[a._v("保存退出。")]),a._v(" "),s("h2",{attrs:{id:"操作-nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作-nginx"}},[a._v("#")]),a._v(" 操作 Nginx")]),a._v(" "),s("ol",[s("li",[a._v("启动 Nginx")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("   systemctl start nginx\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("停止 Nginx")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("   systemctl stop nginx\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("重启 Nginx")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("   systemctl restart nginx\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[a._v("查看 Nginx 状态")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("   systemctl status nginx\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[a._v("启用开机启动 Nginx")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("   systemctl enable nginx\n")])])]),s("ol",{attrs:{start:"6"}},[s("li",[a._v("禁用开机启动 Nginx")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("   systemctl disable nginx\n")])])]),s("h2",{attrs:{id:"防火墙问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防火墙问题"}},[a._v("#")]),a._v(" 防火墙问题")]),a._v(" "),s("p",[a._v("如果你的服务器打开了防火墙，你需要运行下面的命令，打开 80 和 443 端口。")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" firewall-cmd --permanent --zone"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("public --add-service"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("http\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" firewall-cmd --permanent --zone"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("public --add-service"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("https\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" firewall-cmd --reload\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);