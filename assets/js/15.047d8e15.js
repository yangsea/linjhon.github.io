(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{518:function(t,a,s){"use strict";s.r(a);var e=s(7),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("ES6 全称是 ECMAscript6，其实就是 js 的第 6 个版本，由于 ES5 这个版本中并未更新太多内容，ECMA 协会将大部分的内容在 ES6 中更新，之后又宣布随时可以向协会提交内容，随时更新；然后，在每年的 6 月份左右，再统一更新版本，并以每年的年份作为版本号。")])]),t._v(" "),s("h2",{attrs:{id:"使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),s("p",[t._v("虽然目前主流的浏览器都已支持 ES6 的语法，但有时候还是需要考虑某些低版本浏览器兼容性的问题（IE8）,这时我们就需要引入 babel 来编译，转换成 es3。")]),t._v(" "),s("p",[t._v("通常使用的方式是 webpack+babel 的方式进行编译，当然如果喜欢 gulp 也不是不行。")]),t._v(" "),s("h2",{attrs:{id:"基础语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础语法"}},[t._v("#")]),t._v(" 基础语法")]),t._v(" "),s("h4",{attrs:{id:"变量声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量声明"}},[t._v("#")]),t._v(" 变量声明")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("let ：增加了块级作用域，声明时必须赋值。")]),t._v("\njs 中使用"),s("code",[t._v("var")]),t._v("声明的变量，只存在全局作用域以及局部作用域（即函数作用域）。\n而使用"),s("code",[t._v("let")]),t._v("声明的变量，是存在块级作用域的，即代码块之间相互获取变量值。并且"),s("code",[t._v("let")]),t._v("在声明变量时必须赋值，否则浏览器会直接报错。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("const ：常量，声明时也必须赋值。")]),t._v("\n用"),s("code",[t._v("const")]),t._v("声明的是常量，即在声明赋值后就不能再改变，否则会报错。\n当然，在声明类型为对象时，我们可以进行添加删除属性。\n我们知道 js 中的数据类型分为"),s("strong",[t._v("基础数据类型")]),t._v("和"),s("strong",[t._v("复杂数据类型")]),t._v("，基础数据存放在"),s("strong",[t._v("堆")]),t._v("中，存放的就是值。而对象即复杂数据类型是存放在"),s("strong",[t._v("栈")]),t._v("之中，它实际存放的其实是一个地址，我们改变这个对象下的属性或者方法是并不影响这个地址。但如果你重新将对象赋值给它，改变了地址就会报错。")])])]),t._v(" "),s("h4",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("p",[t._v("在 ES6 中，我们可以使用两个"),s("code",[t._v("``")]),t._v("符号来表示字符串。")]),t._v(" "),s("p",[t._v("可以在"),s("code",[t._v("``")]),t._v("之家写入变量进行字符串拼接")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const app = d\nconst str = `abc${app}cba`\nconsole.log(str) //abcdcba;\n")])])]),s("h4",{attrs:{id:"箭头函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数"}},[t._v("#")]),t._v(" 箭头函数")]),t._v(" "),s("p",[t._v("在之前我们声明一个匿名函数是这样")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function(a){\n  return a=3;\n}\n")])])]),s("p",[t._v("而在 ES6 中：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("a=>{a=3}\n")])])]),s("p",[t._v("具体是这样：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("() => { ... } // 没有参数\nx => { ... } // 一个参数 一个标识符\n(x, y) => { ... } // 几个参数\n")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);