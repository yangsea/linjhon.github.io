(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{524:function(_,n,e){"use strict";e.r(n);var s=e(7),t=Object(s.a)({},(function(){var _=this,n=_.$createElement,e=_._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("blockquote",[e("p",[_._v("一个 \b\b\b\b\bVue + nodejs +MongoDB 后台管理系统。到现在大概 5 天的时间，先写个总结。")])]),_._v(" "),e("blockquote",[e("p",[_._v("Vue 负责前端页面的展示，路由功能交给 Vue-router。")])]),_._v(" "),e("blockquote",[e("p",[_._v("Express 不写路由，只负责写 api 接口，\b 使用 mongoose 与 MongoDB 数据库进行数据交互，实现前后端解耦。")])]),_._v(" "),e("p",[_._v("在 UI 框架的选型上还是不太满意，写过之后才发现 Iview 框架有不少的缺陷，比如 menu 菜单中缺少路由跳转功能，需要通过点击事件返回的"),e("code",[_._v("name")]),_._v("值，通过编程式导航的方式来进行路由跳转"),e("code",[_._v("router.push()")]),_._v("，再来就是文档写得并不是很好，虽然 ui 效果很好。")]),_._v(" "),e("p",[_._v("mongodb 是非关系型数据库，通常我们可以在里面直接存储 json，对象，图片，甚至是函数。这对于前端来说，会更加方便。在操作 mongodb 数据库时，推荐使用 mongoose 的。我们可以通过定义 Schema 来配置一个集合里的数据类型(同 SQL 的表)，再把这个 Schema 发布成 Model，然后我们就可以通过这个 Model 来进行增删改查。")]),_._v(" "),e("h2",{attrs:{id:"ji-shu"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ji-shu"}},[_._v("#")]),_._v(" 技术")]),_._v(" "),e("p",[e("strong",[_._v("前端")])]),_._v(" "),e("p",[_._v("vue2 + vuex + vue-router + iview + axios/vue-axios + ES6")]),_._v(" "),e("p",[e("strong",[_._v("后端")])]),_._v(" "),e("p",[_._v("nodejs + express +mongoose")]),_._v(" "),e("p",[e("strong",[_._v("工具")]),_._v("\nwebpack")]),_._v(" "),e("p",[e("strong",[_._v("数据库")]),_._v("\nMongoDB")]),_._v(" "),e("p",[_._v("#项目预览")]),_._v(" "),e("p",[_._v("本地需要安装 mongodb 数据库")]),_._v(" "),e("p",[_._v("##客户端 client")]),_._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("//打开目录\n cd client\n\n//安装依赖包\n npm i\n\n//启动本地客户端服务器\nnpm run dev\n\n//打包文件\nnpm run build\n")])])]),e("h2",{attrs:{id:"fu-wu-duan-server"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fu-wu-duan-server"}},[_._v("#")]),_._v(" 服务端 server")]),_._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v(" cd server\n\n npm i\n\n//开启服务器\n npm run start\n")])])]),e("p",[_._v("##功能")]),_._v(" "),e("ul",[e("li",[_._v("[x] 用户、文章、评论实现增删改查；")]),_._v(" "),e("li",[_._v("[x] 基于 JWT 的登陆验证、状态留存；")]),_._v(" "),e("li",[_._v("[x] 使用 muler 实现上传图片功能；")]),_._v(" "),e("li",[_._v("[x] \b 多分类管理（曾删改）；")])]),_._v(" "),e("h2",{attrs:{id:"geng-xin-ji-hua"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#geng-xin-ji-hua"}},[_._v("#")]),_._v(" 更新计划")]),_._v(" "),e("ul",[e("li",[_._v("[ ] 优化分类，\b 与各模块进行交互；")]),_._v(" "),e("li",[_._v("[ ] 首页模块；")]),_._v(" "),e("li",[_._v("[ ] 数据统计模块；")])]),_._v(" "),e("h2",{attrs:{id:"mu-lu-jie-gou"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mu-lu-jie-gou"}},[_._v("#")]),_._v(" 目录结构")]),_._v(" "),e("p",[e("strong",[_._v("客户端目录")])]),_._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("|____client\n| |____.babelrc\n| |____index.html\n| |____package.json\n| |____README.md\n| |____src\n| | |____App.vue\n| | |____assets\n| | | |____500007055.jpg\n| | |____common\n| | | |____getdata.js\n| | |____components\n| | | |____ClassifyTree.vue\n| | | |____Form.vue\n| | | |____Layout.vue\n| | | |____Login.vue\n| | |____main.js\n| | |____my-theme\n| | | |____index.less\n| | |____routes.js\n| | |____store\n| | | |____index.js\n| | |____views\n| | | |____Ablum.vue\n| | | |____Article.vue\n| | | |____Classify.vue\n| | | |____Comment.vue\n| | | |____Home.vue\n| | | |____Upload.vue\n| | | |____User.vue\n| |____webpack.config.js\n|____LICENSE\n|____README.md\n")])])]),e("p",[e("strong",[_._v("\b\b 服务端目录")])]),_._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("|____server\n| |____app.js\n| |____bin\n| | |____www\n| |____controllers\n| | |____ArticleCtrl.js\n| | |____CateCtrl.js\n| | |____CommentCtrl.js\n| | |____UploadCtrl.js\n| | |____UserCtrl.js\n| |____MIME.js\n| |____models\n| | |____ArticleModel.js\n| | |____CateModel.js\n| | |____CommentModel.js\n| | |____UploadModel.js\n| | |____UserModel.js\n| |____other.js\n| |____package.json\n| |____public\n| | |____images\n| | |____javascripts\n| | |____stylesheets\n| | | |____style.css\n| |____README.md\n| |____routes\n| | |____article.js\n| | |____cate.js\n| | |____comment.js\n| | |____index.js\n| | |____upload.js\n| | |____users.js\n| |____server.js\n| |____upload\n| | |____ablums\n| | | |____avatar-1495266654995.png\n| | | |____avatar-1495266808125.png\n| | | |____avatar-1495266970632.jpg\n| |____views\n| | |____error.ejs\n| | |____index.ejs\n|____UPDATE.md\n")])])]),e("p",[_._v("##项目地址")]),_._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/linqiang007/Back-stage-Management",target:"_blank",rel:"noopener noreferrer"}},[_._v("Github 地址"),e("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=t.exports}}]);