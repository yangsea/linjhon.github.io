(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{524:function(t,e,s){"use strict";s.r(e);var a=s(7),l=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("webpack 虽然是 Facebook 专门为了它的 React 框架而开发的前端自动化工具。但并不是没有了 React，它就无法使用。它提出了“一切皆模块的理念”，因此我们可以把所需要的框架、类库、插件甚至是图片、CSS、字体等等都引入。它的引入规范基本符合模块化规范：AMD、CMD、UMD、CommonJS 等等。所以即使你之前从未使用过 WebPack，但它也可以很好的兼容你之前的项目。")])]),t._v(" "),s("p",[t._v("##安装")]),t._v(" "),s("p",[t._v("既然要使用，那就必须要安装它,前提是你已经安装了 nodejs。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm i webpack -g\n")])])]),s("p",[t._v("之后，我们就需要在项目文件夹下创建一个文件："),s("code",[t._v("webpack.config.js")]),t._v("。\n这是默认名字,当然我们也可以使用修改的文件名，")]),t._v(" "),s("p",[t._v("##基本使用\n下面是一段非常简单使用：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var webpack = require('webpack');\nmodule.exports = {\n\tentry: './src/index.js', // 入口文件\n\toutput: { // 出口文件\n\t\tpath: './build',\n\t\tpublicPath: '/build/',\n\t\tfilename: 'bundle.js' //输出文件\n\t},\n\tmodule: { // 操作模块\n\t\tloaders: [ //加载器\n\t\t\t{\n\t\t\t\ttest: /\\.js$/,\n\t\t\t\texclude: /node_modules/,\n\t\t\t\tloader: 'babel-loader?presets[]=es2015&presets[]=react'\n\t\t\t}\n    }\n")])])]),s("p",[t._v("这段配置实现的功能就是将 js 文件中 ES6、JSX 的语法编译成 es3；")]),t._v(" "),s("p",[t._v("##基础配置\n1.webpack 的配置文件会暴露出一个对象，格式如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("module.exports = {\n　　//配置项\n}\n")])])]),s("p",[t._v("这里使用的就是 CommonJS 的规范来暴露接口。")]),t._v(" "),s("p",[t._v("2.基本属性")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("entry")]),t._v(":打包的入口文件,通过 html 中的 script 标签直接引入。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("output")]),t._v(":配置打包文件名、路径。")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("output: { // 出口文件\n    path: './build',\n    publicPath: '/build/',\n    filename: 'bundle.js' //输出文件\n}\n")])])]),s("ul",[s("li",[s("p",[s("strong",[t._v("fileName")]),t._v(":定义输出文件名，")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("path")]),t._v(":定义输出文件路径")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("module")]),t._v(":定义对模块的处理逻辑")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("module: { // 操作模块\n    loaders: [ //加载器\n        {\n            test: /\\.js$/,\n            exclude: /node_modules/,\n            loader: 'babel-loader?presets[]=es2015&presets[]=react'\n        }\n}\n")])])]),s("ul",[s("li",[s("p",[s("strong",[t._v("loaders")]),t._v(":所有引入的模块都是通过这个配置属性来解析")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("resolve")]),t._v(":影响对模块的解析")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("extensions")]),t._v(":识别文件后缀名")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("plugins")]),t._v(":配置插件。")]),t._v(" "),s("p",[t._v("3.loader")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("babel-loader")]),t._v(':js 语法解析的加载器；需要配合安装\n“babel-core”:babel 的核心\n"babel-preset-es2015":按需下载自己需要的解析器\n"babel-preset-react":JSx 语法解析')])]),t._v(" "),s("li",[s("p",[t._v("test 属性是使用正则来匹配文件.")])]),t._v(" "),s("li",[s("p",[t._v("exclude:可以将不需要编译的文件排除在外;")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{   test: /\\.js$/,\n    exclude: /node_modules/,\n    loader: 'babel-loader?presets[]=es2015&presets[]=react'\n}\n")])])]),s("ul",[s("li",[s("strong",[t._v("sass-loader")]),t._v("、"),s("strong",[t._v("css-loader")]),t._v("、"),s("strong",[t._v("style-loader")]),t._v("：\n这三个配合使用可以将 sass 文件编译成 css 文件并且加载在 HTML 文件的 style 标签中。需要注意的是 loader 加载器是从右到左的顺序加载的。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{\n    test: /\\.scss$/,\n    loader: ['style-loader', 'css-loader', 'sass-loader']\n}\n")])])]),s("p",[t._v("其中的 loader 可以缩写成："),s("code",[t._v("'style-loader!css-loader!sass-loader'")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("url-loader")]),t._v(":\n将图片文件转换成 base64 引入;大于限制的自动使用 file-loader 迁入到./images/目录下，文件名后面追加了 8 位的 hash 值;\n{\ntest: /.(png|jpg|gif)$/,\nloader: 'url-loader?limit=12000&name=./images/[name].[hash:8].[ext]'\n}")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("file-loader")]),t._v(":配置后可以将引入的字体文件打包到 font 文件下,;")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{\n    // 匹配字体文件;打包到build文件下\n    test: /\\.(woff|woff2|svg|eot|ttf)$/, //\n    loader: 'file-loader?name=./fonts/[name].[ext]'\n}\n")])])]),s("p",[s("strong",[t._v("注意")]),t._v("：这里的相对路径都是在出口文件的目录下生成的。")]),t._v(" "),s("p",[s("strong",[t._v("基本配置文件")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var path = require('path');\nvar webpack = require('webpack');\n\nmodule.exports = {\n\tentry: './src/index.js', // 入口文件\n\toutput: { // 出口文件\n\t\tpath: path.resolve(__dirname, './build'),\n\t\tpublicPath: '/build/',\n\t\tfilename: 'bundle.js' //输出文件\n\t},\n\tmodule: { // 操作模块\n\t\tloaders: [ //加载器\n\t\t\t{\n\t\t\t\ttest: /\\.js$/,\n\t\t\t\texclude: /node_modules/,\n\t\t\t\tloader: 'babel-loader?presets[]=es2015&presets[]=react'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttest: /\\.scss$/,\n\t\t\t\tloader: ['style-loader', 'css-loader', 'sass-loader?sourceMap']\n\t\t\t},\n\t\t\t{\n\t\t\t\ttest: /\\.(png|jpg|gif)$/,\n\t\t\t\tloader: 'url-loader?limit=12000&name=./images/[name].[hash:8].[ext]'\n\t\t\t\t//将小于12k的图片转换到base64引入;大于的使用file-loader迁入到./build/images/目录下;\n\t\t\t},\n\t\t\t{　　　　　　\n\t\t\t\ttest: /\\.html$/, //处理html里的文件资源\n\t\t\t\tloader: 'html-withimg-loader'　　　　\n\t\t\t},\n\t\t\t{\n\t\t\t\t// 匹配字体文件;打包到build文件下\n\t\t\t\ttest: /\\.(woff|woff2|svg|eot|ttf)$/, //\n\t\t\t\tloader: 'file-loader?name=./fonts/[name].[ext]'\n\t\t\t},\n\t\t\t{\n\t\t\t\t//打包到build文件下\n\t\t\t\ttest: /\\.php$/, //\n\t\t\t\tloader: 'file-loader?name=./php/[name].[ext]'\n\t\t\t}\n\t\t]\n\t}\n}\n\n")])])])])}),[],!1,null,null,null);e.default=l.exports}}]);